type Account @model @auth(rules: [
      { allow: owner },
      { allow: private, operations: [read] },
      { allow: public, operations: [read] }
  ]) {
  id: ID!
  firstName: String!
  lastName: String!
  imgUrl: String
  company: String!
  email:String
  role: Role @connection(name: "AccountRole")
  phones: [String]
  enclosure: Enclosure @connection(name: "AccountEnclosure")
  visit: [Visit] @connection(name: "AccountVisits")
  persons: [Person] @connection(name: "AccountPersons")
  privateVehicles: [PrivateVehicle] @connection(name: "AccountPrivateVehicles")
  cargoVehicles: [CargoVehicle] @connection(name: "AccountCargoVehicles")
}

type Visit @model @auth(rules: [
      { allow: owner },
      { allow: private, operations: [read] },
      { allow: public, operations: [read] }
  ]) {
  id: ID!
  person: Person @connection(name: "VisitPerson")
  enclosure: Enclosure! @connection(name: "VisitEnclosure")
  dateTimestamp: String!
  checkInTimestamp: String!
  checkOutTimestamp: String!
  privateVehicle: PrivateVehicle @connection(name: "VisitPrivateVehicle")
  cargoVehicle: CargoVehicle @connection(name: "VisitCargoVehicle")
  reason: String
  status: String
  qrUrl: String
  timestamp: String
  adminApprove:Boolean
  operApprove:Boolean
  account: Account @connection(name: "AccountVisits")
}

type Person @model @auth(rules: [
      { allow: owner },
      { allow: private, operations: [read] },
      { allow: public, operations: [read] }
  ]) {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  imgUrl: String
  phone: String
  company: String
  idFrontPath: String!
  idBackPath: String!
  timestamp: String!
  site: Visit @connection(name: "VisitPerson")
  account: Account @connection(name: "AccountPersons")
}

type PrivateVehicle @model @auth(rules: [
      { allow: owner },
      { allow: private, operations: [read] },
      { allow: public, operations: [read] }
  ]) {
  id: ID!
  color: String!
  brand: String!
  subBrand: String!
  model: String!
  timestamp: String!
  visit: Visit @connection(name: "VisitPrivateVehicle")
  account: Account @connection(name: "AccountPrivateVehicles")
}

type CargoVehicle @model @auth(rules: [
      { allow: owner },
      { allow: private, operations: [read] },
      { allow: public, operations: [read] }
  ]) {
  id: ID!
  line: String!
  platformPlate: String!
  petition: String!
  packs: Int!
  containerNumber: String!
  tractNumber: String!
  load: Boolean!
  unload: Boolean!
  sealsNumber: String!
  additionalDoc: String!
  additionalDocPath: String!
  petitionPath: String!
  timestamp: String!
  driverNAme: String
  account: Account @connection(name: "AccountCargoVehicles")
  visit: Visit @connection(name: "VisitCargoVehicle")
}

type Enclosure @model @auth(rules: [
      { allow: owner },
      { allow: private, operations: [read] },
      { allow: public, operations: [read] }
  ]) {
  id: ID!
  name: String!
  address: String
  phone: String
  lat: String
  lon: String
  visit: Visit @connection(name: "VisitEnclosure")
  account: Account @connection(name: "AccountEnclosure")
}

type Role @model @auth(rules: [
      { allow: owner },
      { allow: private, operations: [read] },
      { allow: public, operations: [read] }
  ]) {
  id: ID!
  roleName: String!
  description: String
  admin: Boolean
  user:Boolean
  guest: Boolean
  host: Boolean
  account: Account @connection(name: "AccountRole")
}
